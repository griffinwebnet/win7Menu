{"ts":1359163275168,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"const St = imports.gi.St;\nconst Lang = imports.lang;\nconst Cinnamon = imports.gi.Cinnamon;\nconst Clutter = imports.gi.Clutter;\nconst PopupMenu = imports.ui.popupMenu;\nconst AppFavorites = imports.ui.appFavorites;\nconst GnomeSession = imports.misc.gnomeSession;\nconst ScreenSaver = imports.misc.screenSaver;\nconst DND = imports.ui.dnd;\nconst Meta = imports.gi.Meta;\n\nconst AppletDir = imports.ui.appletManager.applets['win7Menu@physics'];\nconst MainApplet = AppletDir.applet;\nconst Items = AppletDir.items;\n\nfunction RightButtonsBox(appsMenuButton, menu) {\n    this._init(appsMenuButton, menu);\n}\n\nRightButtonsBox.prototype = {\n    _init: function (appsMenuButton, menu) {\n        this.appsMenuButton = appsMenuButton;\n        this.actor = new St.BoxLayout();\n        this.itemsBox = new St.BoxLayout({\n            vertical: true\n        });\n        this.shutDownItemsBox = new St.BoxLayout({\n            vertical: true\n        });\n        this.shutdownBox = new St.BoxLayout({\n            vertical: false\n        });\n        this.actor._delegate = this;\n        this.menu = menu;\n        this.addItems();\n        this._container = new Cinnamon.GenericContainer();\n        this.actor.add(this._container);\n        this._container.connect('get-preferred-height', Lang.bind(this, this._getPreferredHeight));\n        this._container.connect('get-preferred-width', Lang.bind(this, this._getPreferredWidth));\n        this._container.connect('allocate', Lang.bind(this, this._allocate));\n        this._container.add_actor(this.itemsBox);\n        this._container.add_actor(this.shutDownItemsBox);\n    },\n\n    addItems: function () {\n        this.hoverIcon = new Items.HoverIcon();\n        this.home = new Items.TextBoxItem(_(\"Home\"), \"folder-home\", \"Util.spawnCommandLine('nautilus')\", this.menu, this.hoverIcon, false);\n        this.documents = new Items.TextBoxItem(_(\"Documents\"), \"folder-documents\", \"Util.spawnCommandLine('nautilus Documents')\", this.menu, this.hoverIcon, false);\n        this.pictures = new Items.TextBoxItem(_(\"Pictures\"), \"folder-pictures\", \"Util.spawnCommandLine('nautilus Pictures')\", this.menu, this.hoverIcon, false);\n        this.music = new Items.TextBoxItem(_(\"Music\"), \"folder-music\", \"Util.spawnCommandLine('nautilus Music')\", this.menu, this.hoverIcon, false);\n        this.videos = new Items.TextBoxItem(_(\"Videos\"), \"folder-videos\", \"Util.spawnCommandLine('nautilus Videos')\", this.menu, this.hoverIcon, false);\n        this.computer = new Items.TextBoxItem(_(\"Computer\"), \"computer\", \"Util.spawnCommandLine('nautilus computer:///')\", this.menu, this.hoverIcon, false);\n        this.packageItem = new Items.TextBoxItem(_(\"Package Manager\"), \"synaptic\", \"Util.spawnCommandLine('gksu synaptic')\", this.menu, this.hoverIcon, false);\n        this.control = new Items.TextBoxItem(_(\"Control Center\"), \"gnome-control-center\", \"Util.spawnCommandLine('gnome-control-center')\", this.menu, this.hoverIcon, false);\n        this.terminal = new Items.TextBoxItem(_(\"Terminal\"), \"terminal\", \"Util.spawnCommandLine('gnome-terminal')\", this.menu, this.hoverIcon, false);\n        this.help = new Items.TextBoxItem(_(\"Help\"), \"help\", \"Util.spawnCommandLine('yelp')\", this.menu, this.hoverIcon, false);\n        this.shutdown = new Items.TextBoxItem(_(\"Shutdown\"), \"system-shutdown\", \"Session.ShutdownRemote()\", this.menu, this.hoverIcon, false);\n        this.shutdownMenu = new Items.ShutdownMenu(this.menu, this.hoverIcon);\n\n        this.shutdownBox.add_actor(this.shutdown.actor);\n        this.shutdownBox.add_actor(this.shutdownMenu.actor);\n\n        this.itemsBox.add_actor(this.hoverIcon.icon);\n        this.itemsBox.add_actor(this.home.actor);\n        this.itemsBox.add_actor(this.pictures.actor);\n        this.itemsBox.add_actor(this.music.actor);\n        this.itemsBox.add_actor(this.videos.actor);\n        this.itemsBox.add_actor(this.documents.actor);\n        this.itemsBox.add_actor(new PopupMenu.PopupSeparatorMenuItem().actor);\n        this.itemsBox.add_actor(this.computer.actor);\n        this.itemsBox.add_actor(this.control.actor);\n        this.itemsBox.add_actor(new PopupMenu.PopupSeparatorMenuItem().actor);\n        this.itemsBox.add_actor(this.packageItem.actor);\n        this.itemsBox.add_actor(this.terminal.actor);\n        this.itemsBox.add_actor(this.help.actor);\n        this.shutDownItemsBox.add_actor(this.shutdownBox);\n        this.shutDownItemsBox.add_actor(this.shutdownMenu.menu.actor);\n    }, \n\n    _getPreferredHeight: function (actor, forWidth, alloc) {\n        let[minSize, naturalSize] = this.itemsBox.get_preferred_height(forWidth);\n        alloc.min_size = minSize;\n        alloc.natural_size = naturalSize;\n    },\n\n    _getPreferredWidth: function (actor, forHeight, alloc) {\n        let[minSize, naturalSize] = this.itemsBox.get_preferred_width(forHeight);\n        alloc.min_size = minSize;\n        alloc.natural_size = naturalSize;\n    },\n\n    _allocate: function (actor, box, flags) {\n        let childBox = new Clutter.ActorBox();\n\n        let[minWidth, minHeight, naturalWidth, naturalHeight] = this.itemsBox.get_preferred_size();\n\n        childBox.y1 = 0;\n        childBox.y2 = childBox.y1 + naturalHeight;\n        childBox.x1 = 0;\n        childBox.x2 = childBox.x1 + naturalWidth;\n        this.itemsBox.allocate(childBox, flags);\n\n        let menuHeight = this.menu.actor.get_height();\n\n        [minWidth, minHeight, naturalWidth, naturalHeight] = this.shutDownItemsBox.get_preferred_size();\n\n        childBox.y1 = menuHeight - 100;\n        childBox.y2 = childBox.y1;\n        childBox.x1 = 0;\n        childBox.x2 = childBox.x1 + naturalWidth;\n        this.shutDownItemsBox.allocate(childBox, flags);\n    }\n}\n\nfunction FavoritesBox() {\n    this._init();\n}\n\nFavoritesBox.prototype = {\n    _init: function () {\n        this.actor = new St.BoxLayout({\n            vertical: true\n        });\n        this.actor._delegate = this;\n\n        this._dragPlaceholder = null;\n        this._dragPlaceholderPos = -1;\n        this._animatingPlaceholdersCount = 0;\n    },\n\n    _clearDragPlaceholder: function () {\n        if (this._dragPlaceholder) {\n            this._dragPlaceholder.animateOutAndDestroy();\n            this._dragPlaceholder = null;\n            this._dragPlaceholderPos = -1;\n        }\n    },\n\n    handleDragOver: function (source, actor, x, y, time) {\n        let app = source.app;\n\n        // Don't allow favoriting of transient apps\n        if (app == null || app.is_window_backed() || (!(source instanceof Items.FavoritesButton) && app.get_id() in AppFavorites.getAppFavorites().getFavoriteMap())) return DND.DragMotionResult.NO_DROP;\n\n        let favorites = AppFavorites.getAppFavorites().getFavorites();\n        let numFavorites = favorites.length;\n\n        let favPos = favorites.indexOf(app);\n\n        let children = this.actor.get_children();\n        let numChildren = children.length;\n        let boxHeight = this.actor.height;\n\n        // Keep the placeholder out of the index calculation; assuming that\n        // the remove target has the same size as \"normal\" items, we don't\n        // need to do the same adjustment there.\n        if (this._dragPlaceholder) {\n            boxHeight -= this._dragPlaceholder.actor.height;\n            numChildren--;\n        }\n\n        let pos = Math.round(y * numFavorites / boxHeight);\n\n        if (pos != this._dragPlaceholderPos && pos <= numFavorites) {\n            if (this._animatingPlaceholdersCount > 0) {\n                let appChildren = children.filter(function (actor) {\n                    return (actor._delegate instanceof Items.FavoritesButton);\n                });\n                this._dragPlaceholderPos = children.indexOf(appChildren[pos]);\n            } else {\n                this._dragPlaceholderPos = pos;\n            }\n\n            // Don't allow positioning before or after self\n            if (favPos != -1 && (pos == favPos || pos == favPos + 1)) {\n                if (this._dragPlaceholder) {\n                    this._dragPlaceholder.animateOutAndDestroy();\n                    this._animatingPlaceholdersCount++;\n                    this._dragPlaceholder.actor.connect('destroy', Lang.bind(this, function () {\n                        this._animatingPlaceholdersCount--;\n                    }));\n                }\n                this._dragPlaceholder = null;\n\n                return DND.DragMotionResult.CONTINUE;\n            }\n\n            // If the placeholder already exists, we just move\n            // it, but if we are adding it, expand its size in\n            // an animation\n            let fadeIn;\n            if (this._dragPlaceholder) {\n                this._dragPlaceholder.actor.destroy();\n                fadeIn = false;\n            } else {\n                fadeIn = true;\n            }\n\n            this._dragPlaceholder = new DND.GenericDragPlaceholderItem();\n            this._dragPlaceholder.child.set_width(source.actor.height);\n            this._dragPlaceholder.child.set_height(source.actor.height);\n            this.actor.insert_actor(this._dragPlaceholder.actor, this._dragPlaceholderPos);\n            if (fadeIn) this._dragPlaceholder.animateIn();\n        }\n\n        let srcIsFavorite = (favPos != -1);\n\n        if (srcIsFavorite) return DND.DragMotionResult.MOVE_DROP;\n\n        return DND.DragMotionResult.COPY_DROP;\n    },\n\n    // Draggable target interface\n    acceptDrop: function (source, actor, x, y, time) {\n        let app = source.app;\n\n        // Don't allow favoriting of transient apps\n        if (app == null || app.is_window_backed()) {\n            return false;\n        }\n\n        let id = app.get_id();\n\n        let favorites = AppFavorites.getAppFavorites().getFavoriteMap();\n\n        let srcIsFavorite = (id in favorites);\n\n        let favPos = 0;\n        let children = this.actor.get_children();\n        for (let i = 0; i < this._dragPlaceholderPos; i++) {\n            if (this._dragPlaceholder && children[i] == this._dragPlaceholder.actor) continue;\n\n            if (!(children[i]._delegate instanceof Items.FavoritesButton)) continue;\n\n            let childId = children[i]._delegate.app.get_id();\n            if (childId == id) continue;\n            if (childId in favorites) favPos++;\n        }\n\n        Meta.later_add(Meta.LaterType.BEFORE_REDRAW, Lang.bind(this, function () {\n            let appFavorites = AppFavorites.getAppFavorites();\n            if (srcIsFavorite) appFavorites.moveFavoriteToPos(id, favPos);\n            else appFavorites.addFavoriteAtPos(id, favPos);\n            return false;\n        }));\n\n        return true;\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":10531}]],"length":10531}
{"contributors":[],"silentsave":false,"ts":1359163301185,"patch":[[{"diffs":[[0,"dLine('n"],[-1,"autilus"],[1,"emo"],[0,"')\", thi"]],"start1":1758,"start2":1758,"length1":23,"length2":19},{"diffs":[[0,"dLine('n"],[-1,"autilus"],[1,"emo"],[0," Documen"]],"start1":1909,"start2":1909,"length1":23,"length2":19},{"diffs":[[0,"dLine('n"],[-1,"autilus"],[1,"emo"],[0," Picture"]],"start1":2067,"start2":2067,"length1":23,"length2":19},{"diffs":[[0,"dLine('n"],[-1,"autilus"],[1,"emo"],[0," Music')"]],"start1":2215,"start2":2215,"length1":23,"length2":19},{"diffs":[[0,"dLine('n"],[-1,"autilus"],[1,"emo"],[0," Videos'"]],"start1":2363,"start2":2363,"length1":23,"length2":19},{"diffs":[[0,"e('n"],[-1,"autilus"],[1,"emo"],[0," com"]],"start1":2515,"start2":2515,"length1":15,"length2":11}]],"length":10507,"saved":false}
